---
import Layout from "../layouts/Layout.astro";
import { projects } from "../data/projects.ts";
---

<Layout>
  <!-- Hero Section -->
  <div
  class="hero min-h-screen w-full"
  style="background-image: url(https://img.daisyui.com/images/stock/photo-1507358522600-9f71e620c44e.webp);">
  <div class="hero-overlay bg-opacity-80"></div>
  <div class="hero-content text-neutral-content text-center">
    <div class="max-w-md">
      <h1 class="mb-5 text-5xl font-bold">Hello there</h1>
      <p class="mb-5">
        Welcome to our portfolio!
      </p>
      <button class="btn btn-primary">Get Started</button>
    </div>
  </div>
</div>

<!-- Toggle Button for Geek Mode -->
  <div class="fixed top-4 right-4 z-50">
    <label class="label cursor-pointer flex items-center gap-2">
      <span class="label-text text-white text-lg">Geek Mode</span>
      <input id="toggleGeekMode" type="checkbox" class="toggle toggle-primary" />
    </label>
  </div>

<!-- Terminal Interface (Hidden by Default) -->
  <div id="terminal" class="hidden fixed justify-center inset-0 bg-black bg-opacity-90 p-8 z-100">
    <div class="mockup-code bg-neutral text-neutral-content p-6 rounded-lg w-full max-w-3xl mx-auto">
      <pre id="terminalOutput" class="overflow-y-auto max-h-96">
        <code>Welcome to Geek Mode! Type "help" for a list of commands.</code>
      </pre>
      <div class="flex items-center gap-2">
        <span class="text-green-400">$</span>
        <input
          id="terminalInput"
          type="text"
          class="bg-transparent border-none outline-none flex-grow"
          placeholder="Type a command..."
        />
      </div>
    </div>
  </div>
  <!-- Portfolio Sections (Hidden in Geek Mode) -->
  <div id="portfolio">
    <!-- About Section -->
    <section id="about" class="py-20">
      <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-center mb-8">About Me</h2>
        <div class="flex flex-col md:flex-row items-center gap-8">
          <div class="w-full md:w-1/2">
            <img src="/images/profile.jpg" alt="Profile Picture" class="rounded-lg shadow-lg" />
          </div>
          <div class="w-full md:w-1/2">
            <p class="text-lg mb-4">
              I am Oggy
            </p>
            <p class="text-lg">
              Heyy!
            </p>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- JavaScript for Geek Mode and Animations -->
  <script>
    import { projects } from "../data/projects.ts";

    // Prepare project data as a string
    const projectData = projects.map((project, index) => `${index + 1}. ${project.title}: ${project.description}`).join('\n');

    // Toggle Geek Mode
    const toggleGeekModeButton = document.getElementById("toggleGeekMode");
    const terminal = document.getElementById("terminal");
    const terminalInput = document.getElementById("terminalInput");
    const terminalOutput = document.getElementById("terminalOutput");
    const portfolio = document.getElementById("portfolio");

    toggleGeekModeButton.addEventListener("click", () => {
      terminal.classList.toggle("hidden");
      portfolio.classList.toggle("hidden"); // Hide portfolio in Geek Mode
      if (!terminal.classList.contains("hidden")) {
        terminalInput.focus(); // Focus on the input when terminal is shown
      }
    });

    // Handle Commands
    const commands = {
      help: () => `
        Available Commands:
        - help: Show this help message
        - about: Display information about me
        - projects: Display my projects
        - contact: Display contact information
        - clear: Clear the terminal
      `,
      about: () => `
        About Me:
        I'm a passionate developer with experience in building web applications and solving real-world problems.
      `,
      projects: () => `
        My Projects:
        ${projectData}
      `,
      contact: () => `
        Contact Me:
        - Email: oggy@gmail.com
        - GitHub: github.com/oggy
        - LinkedIn: linkedin.com/in/oggy
      `,
      clear: () => {
        terminalOutput.innerHTML = "";
        return "Terminal cleared.";
      },
    };

    terminalInput.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        const command = terminalInput.value.trim().toLowerCase();
        terminalInput.value = ""; // Clear input

        if (commands[command]) {
          const output = commands[command]();
          terminalOutput.innerHTML += `<code>$ ${command}</code>\n<code>${output}</code>\n`;
        } else {
          terminalOutput.innerHTML += `<code>$ ${command}</code>\n<code class="text-error">Command not found. Type "help" for a list of commands.</code>\n`;
        }

        // Scroll to the bottom of the terminal output
        terminalOutput.scrollTop = terminalOutput.scrollHeight;
      }
    });
  </script>
</Layout>
